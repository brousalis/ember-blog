/**
Inline and block code
*/

pre code, code {
  @include rem(font-size, 1.5);
  font-family: $menlo;
  color: $base01;
}

pre, code {
  background-color: #F5F5F5;
}

/**
Inline code
*/

code {
  border: 1px solid $bodyLessSubtle;
  @include rem(margin, 0, 0.2);
}

/*
Block code
*/

pre {
  @include rem(margin, $spacingMedium, 0);
  @include rem(padding, $spacing / 2);
  @extend %relative;
}

pre code {
  background-color: transparent;
  border: none;

  // Language ribbon
  &:after {
    @include rem(font-size, 1.4);
    @include rem(padding, 0.3, 0.7);
    display: inline-block;
    margin: 0;

    @extend %absolute;
    top: 0;
    right: 0;

    @include rem(border-bottom-left-radius, 0.2);
    border-left: 1px solid $bodyLessSubtle;
    border-bottom: 1px solid $bodyLessSubtle;

    @extend .alt_text;
  }
}

/**
Create text for ribbon containing code language abbreviation
Format:
$languages: name color [optional abbreviation]
*/

$languages:
  html $gold,
  javascript $orange js,
  css $violet,
  scss $violet,
  handlebars $solarizedGreen hbs,
  ruby $solarizedRed;

@each $language in $languages {
  $name: nth($language, 1);
  $color: nth($language, 2);
  $abbr: null;

  // If there is an abbreviation
  @if length($language) > 2 {
    $abbr: nth($language, 3);

    .lang-#{$abbr} {
      &:after {
        content: '#{$abbr}';
        @include color(rgba($color, 0.5)); // Set text color based on background color
      }
    }
  } @else {
    $abbr: $name;
  }

  .lang-#{$name} {
    &:after {
      content: '#{$abbr}';
      @include color(rgba($color, 0.5));
    }
  }
}
